name: Build and Push Backend to GHCR

on:
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        id: vars
        run: |
          OWNER_LC=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          IMG="ghcr.io/${OWNER_LC}/zentik-notifier-backend"
          TAG1="${IMG}:${GITHUB_SHA}"
          # Read version from package.json
          if command -v jq >/dev/null 2>&1; then
            VERSION=$(jq -r .version package.json)
          else
            VERSION=$(node -p "require('./package.json').version" 2>/dev/null || echo "")
          fi
          if [ -n "$VERSION" ] && [ "$VERSION" != "null" ]; then
            TAG_VERSION="${IMG}:${VERSION}"
          fi
          TAG_LATEST="${IMG}:latest"
          echo "image=${IMG}" >> $GITHUB_OUTPUT
          echo "tag_primary=${TAG1}" >> $GITHUB_OUTPUT
          if [ -n "$TAG_VERSION" ]; then
            echo "tag_version=${TAG_VERSION}" >> $GITHUB_OUTPUT
          fi
          echo "tag_latest=${TAG_LATEST}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ steps.vars.outputs.tag_primary }}
            ${{ steps.vars.outputs.tag_latest }}
            ${{ steps.vars.outputs.tag_version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


